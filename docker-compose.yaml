version: "3"

services:
  plugins:
    build:
      context: ./
      dockerfile: ./docker/plugins.Dockerfile
    image: apitool-plugins:development
    platform: linux/x86_64
    volumes:
      - ./plugins:/app/plugins
    command: npm run --prefix plugins start

  client:
    build:
      context: ./
      dockerfile: ./docker/client.Dockerfile
    image: apitool-client:development
    platform: linux/x86_64
    volumes:
      - ./frontend:/app/frontend:delegated
      - ./plugins:/app/plugins
      - /app/frontend/node_modules/
    ports:
      - 8082:8082
    environment:
      - WEBPACKER_DEV_SERVER_HOST=0.0.0.0
      - NODE_ENV=development
      - SERVE_CLIENT=false
    command: npm run --prefix frontend start

  server:
    build:
      context: ./
      dockerfile: ./docker/server.Dockerfile
    image: apitool-server:development
    platform: linux/x86_64
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./server:/app/server:delegated
      - ./plugins:/app/plugins
      - /app/server/node_modules/
      - ./.env:/app/.env
      - ./.env.test:/app/.env.test
    ports:
      - ${APITOOL_SERVER_PORT:-5128}:5128
    environment:
      - SERVE_CLIENT=false
      - FORCE_COLOR=1
      - APITOOL_SERVER_PORT=${APITOOL_SERVER_PORT:-5128}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
    command: npm run --prefix server start:dev

  postgrest:
    image: postgrest/postgrest:v12.0.2
    ports:
      - "3001:3000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:13
    restart: always
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - postgres:/data/postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-apitool}
      POSTGRES_USER: ${POSTGRES_USER:-apitool}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-apitool}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-apitool} -d ${POSTGRES_DB:-apitool}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres:
